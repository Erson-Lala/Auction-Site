{"version":3,"sources":["firebase.js","components/Signup.js","components/Login.js","Navbar/NavBar.js","components/home/Home.js","components/newAuction/NewAuction.js","components/biding/Bid.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","db","getFirestore","Signup","navigate","useNavigate","auth","getAuth","emailRef","useRef","nameRef","passwordRef","passwordConfirmRef","useState","error","setError","loading","setLoading","e","a","preventDefault","name","current","value","password","length","toast","createUserWithEmailAndPassword","res","setDoc","doc","user","uid","email","wallet","userId","Math","floor","random","success","message","Container","className","style","minHeight","Card","maxWidth","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","class","role","aria-hidden","to","Login","AuthLogin","signInWithEmailAndPassword","then","userCredential","fetchUserData","catch","docRef","getDoc","localStorage","setItem","JSON","stringify","data","NavBar","title","createdBy","logOutHandler","removeItem","window","location","reload","Navbar","expand","bg","Brand","href","split","onClick","Home","userDetail","parse","getItem","array","setArray","setData","loader","setLoader","ItemId","setItemId","userData","setUserData","list","Ids","useEffect","getDocs","collection","forEach","index","push","console","log","fetchData","map","ls","date_1","date_2","difference","getTime","TotalDays","ceil","endDateforBiding","ItemFirebaseId","days","Date","sort","first_Argument","second_Argument","parseFloat","Table","striped","bordered","hover","item","key","state","auctionItemData","textDecoration","productName","sellerName","topBid","sellerID","data-toggle","data-target","Item","deleteDoc","filter","handleDelete","NewAuction","setProductName","startingBid","setStartingBid","description","setDescription","date","setDate","handleNewAuction","addDoc","topBidUser","topBidUserId","Description","itemId","placeholder","onChange","target","as","rows","controlId","min","toISOString","disabled","Bid","useLocation","AuctionItemID","newBid","setNewBid","userName","handleEnterBid","updateDoc","newBalance","setTimeout","timeRemaining","App","setuser","u","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f816fbaa.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = ({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n})\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const db=getFirestore(app)\n\n\n\n\n","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\n// import { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useNavigate } from \"react-router-dom\"\nimport { Container } from \"react-bootstrap\"\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { doc, setDoc,} from \"firebase/firestore\";\nimport { db } from \"../firebase\"\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport default function Signup() {\n  const navigate = useNavigate()\n  const auth = getAuth();\n  const emailRef = useRef()\n  const nameRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  async function handleSubmit(e) {\n    e.preventDefault()\n    var name =nameRef.current.value\n    var password =passwordRef.current.value\n    if(name.length<=3 || name.length>20){\n       toast.error(\"The number of Name characters should be greater than 3 and less than 20\")\n       return\n    }\n    if(password.length<8){\n      toast.error(\"The max password length should be 8\")\n      return\n    }\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      toast.error(\"Passwords do not match\")\n    }\n    setLoading(true)\n\n    try {\n      setError(\"\")\n\n      const res = await createUserWithEmailAndPassword(\n        auth,\n        emailRef.current.value,\n        passwordRef.current.value\n      );\n      // Set the ID and Add Collection of User\n      await setDoc(doc(db, \"Users\", res.user.uid), {\n        name: nameRef.current.value,\n        email: emailRef.current.value,\n        wallet: 1000,\n        userId: Math.floor(1000000000 + Math.random() * 999999999)\n      })\n      navigate(\"/\")\n      toast.success(\"Acount is created successfully\")\n      // history.push(\"/\")\n    } catch(e) {\n      setError(\"Failed to create an account\")\n      toast.error(e.message)\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <Container\n        className=\"d-flex align-items-center justify-content-center\"\n        style={{ minHeight: \"100vh\" }}\n      >\n        <Card className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Sign Up</h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control type=\"text\" ref={nameRef} />\n              </Form.Group>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"email\" ref={emailRef} required />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" ref={passwordRef} required />\n              </Form.Group>\n              <Form.Group id=\"password-confirm\">\n                <Form.Label>Password Confirmation</Form.Label>\n                <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n              </Form.Group>\n              {\n                !loading ?\n                  <Button className=\"w-100\" type=\"submit\">\n                    Sign up\n                  </Button>\n                  :\n                  <Button className=\"w-100\" type=\"submit\">\n                    <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                  </Button>\n\n\n              }\n            </Form>\n          </Card.Body>\n          <div className=\"w-100 text-center mt-2\">\n            Already have an account? <Link to=\"/\">Log In</Link>\n          </div>\n        </Card>\n        <Toaster />\n      </Container>\n    </>\n  )\n}\n","import React, { useRef, useState } from \"react\"\n// import {firebase} from \"firebase/app\"\nimport { Form, Button, Card } from \"react-bootstrap\"\n// import { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useNavigate } from \"react-router-dom\"\nimport { Container } from \"react-bootstrap\"\nimport toast, { Toaster } from 'react-hot-toast';\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { db } from \"../firebase\"\nexport default function Login({ AuthLogin }) {\n  const auth = getAuth()\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const navigate = useNavigate()\n  // const { login } = useAuth()\n\n  const [loading, setLoading] = useState(false)\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n    setLoading(true)\n    signInWithEmailAndPassword(auth, emailRef.current.value, passwordRef.current.value)\n      .then((userCredential) => {\n        // Signed in \n        const user = userCredential.user;\n        fetchUserData(user.uid)\n        toast.success(\"Login successfully\")\n        setLoading(false)\n\n        // ...\n      })\n      .catch((error) => {\n        toast.error(error.message)\n        setLoading(false)\n      });\n\n    ///\n\n\n  }\n\n  const fetchUserData = async (id) => {\n    const docRef = doc(db, \"Users\", id)\n    getDoc(docRef)\n      .then((doc) => {\n        localStorage.setItem(\"User\", JSON.stringify(doc.data()));\n        localStorage.setItem(\"UserID\", JSON.stringify(id));\n        AuthLogin();\n        navigate('/home')\n      })\n\n  }\n  return (\n    <>\n      <Container\n        className=\"d-flex align-items-center justify-content-center\"\n        style={{ minHeight: \"100vh\" }}\n      >\n        <Card className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Log In</h2>\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"email\" ref={emailRef} />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" ref={passwordRef} />\n              </Form.Group>\n              {\n                !loading ?\n                  <Button className=\"w-100\" type=\"submit\">\n                    Log In\n                  </Button>\n                  :\n                  <Button className=\"w-100\" type=\"submit\">\n                    <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                  </Button>\n\n              }\n\n             \n            </Form>\n            {/* <div className=\"w-100 text-center mt-3\">\n              <Link to=\"/forgot-password\">Forgot Password?</Link>\n            </div> */}\n          </Card.Body>\n          <div className=\"w-100 text-center mt-2\">\n            Need an account? <Link to=\"/signup\">Sign Up</Link>\n          </div>\n        </Card>\n        <Toaster />\n      </Container>\n    </>\n  )\n}\n","import React from 'react'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport './navBarStyle.css'\r\nimport { Link} from 'react-router-dom'\r\nfunction NavBar({ title ,createdBy}) {\r\n     const logOutHandler = () =>{\r\n          localStorage.removeItem(\"UserID\");\r\n          localStorage.setItem(\"user\", false)\r\n          localStorage.removeItem(\"User\");\r\n          window.location.reload(false)\r\n     }\r\n\r\n\r\n     return (\r\n          <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\r\n               <Container>\r\n                    <Navbar.Brand href=\"#\">\r\n\r\n                         {!window.location.href.split('/')[3] === \"bid\" &&\r\n                              <>\r\n                                   <p>Hi Danial</p>\r\n                              </>\r\n                         }\r\n                         <h3><b>{title}</b></h3>\r\n                    </Navbar.Brand>\r\n                    {\r\n                         window.location.href.split('/')[3] === \"bid\" &&\r\n                         <>\r\n                              <p className=\"created_by\">Created by: {createdBy}</p>\r\n                              <div>\r\n                                   <Link to='/home'>\r\n                                        <button type=\"button\" className=\"btn btn-primary home_button\">Home</button>\r\n                                   </Link>\r\n                                   \r\n                                        <button type=\"button\" className=\"btn btn-danger\"  onClick={()=>logOutHandler()}>Log out</button>\r\n                                   \r\n                              </div>\r\n                         </>\r\n                    }\r\n\r\n\r\n                    {\r\n                         window.location.href.split('/')[3] === \"home\" &&\r\n                         <button type=\"button\" className=\"btn btn-danger\"  onClick={()=>logOutHandler()}>Log out</button>\r\n                    }\r\n                    {\r\n                         window.location.href.split('/')[3] === \"newAuction\" &&\r\n                         <>\r\n                              <div>\r\n                                   <Link to='/home'>\r\n                                        <button type=\"button\" className=\"btn btn-primary home_button\">Home</button>\r\n                                   </Link>\r\n                                   \r\n                                        <button type=\"button\" className=\"btn btn-danger\" onClick={()=>logOutHandler()}>Log out</button>\r\n                                   \r\n\r\n                              </div>\r\n                         </>\r\n                    }\r\n\r\n               </Container>\r\n          </Navbar>\r\n     );\r\n}\r\n\r\nexport default NavBar;","import React, { useEffect, useState } from 'react';\r\nimport { Container, Table } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { collection, getDocs, doc, getDoc, deleteDoc } from \"firebase/firestore\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { db } from '../../firebase';\r\nimport './homeStyle.css'\r\nimport NavBar from '../../Navbar/NavBar';\r\nexport default function Home() {\r\n     const userDetail = JSON.parse(localStorage.getItem('User'))\r\n     const [array, setArray] = useState([])\r\n     const [data, setData] = useState([])\r\n     const [loader, setLoader] = useState(true)\r\n     const [ItemId, setItemId] = useState([])\r\n     const [userData, setUserData] = useState()\r\n     const userId = JSON.parse(localStorage.getItem(\"UserID\"))\r\n     let list = []\r\n     let Ids = []\r\n\r\n     useEffect(() => {\r\n\r\n\r\n          //Get all the Data from the Firebase\r\n          const fetchData = async () => {\r\n               try {\r\n                    const querySnapshot = await getDocs(collection(db, \"Auction\"));\r\n                    querySnapshot.forEach((doc, index) => {\r\n                         list.push(doc.data())\r\n                         Ids.push(doc.id)\r\n                    })\r\n                    setItemId(Ids)\r\n                    setData(list)\r\n                    setLoader(false)\r\n               } catch (error) {\r\n                    console.log(\"The error is\", error)\r\n               }\r\n\r\n          }\r\n          fetchData()\r\n\r\n          // Fetch Single User Data\r\n          const docRef = doc(db, 'Users', userId)\r\n          getDoc(docRef)\r\n               .then((doc) => {\r\n                    setUserData(doc.data())\r\n               })\r\n     }, [])\r\n\r\n     useEffect(() => {\r\n         //Sorting Dates \r\n          data.map((ls, index) => {\r\n               let date_1 = new Date(ls.endDateforBiding);\r\n               let date_2 = new Date();\r\n\r\n               const days = (date_1, date_2) => {\r\n                    let difference = date_1.getTime() - date_2.getTime();\r\n                    let TotalDays = Math.ceil(difference / (1000 * 3600 * 24));\r\n                    ls.endDateforBiding = TotalDays;\r\n                    ls.ItemFirebaseId = ItemId[index];\r\n               }\r\n               days(date_1, date_2)\r\n          })\r\n\r\n          setArray(data.sort((first_Argument, second_Argument) => parseFloat(first_Argument.endDateforBiding) - parseFloat(second_Argument.endDateforBiding)));\r\n     }, [data])\r\n\r\n     const handleDelete = (Item) => {\r\n          const docRef = doc(db, 'Auction', Item.ItemFirebaseId)\r\n          deleteDoc(docRef)\r\n               .then(() => {\r\n                    toast.success(\"Item has deleted\")\r\n               })\r\n               .catch((e) => {\r\n                    toast.error(\"Server encounter an unexception condition\")\r\n               })\r\n          setArray(array.filter((ls) => ls.ItemFirebaseId != Item.ItemFirebaseId))\r\n     }\r\n\r\n     return (\r\n          <Container>\r\n               <main>\r\n                    <NavBar title=\"Current Auction\" />\r\n                    {\r\n                         loader ?\r\n                              <div class=\"d-flex justify-content-center align-items-center\">\r\n                                   <div class=\"spinner-grow d-flex \" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                   </div>\r\n                              </div>\r\n                              :\r\n                              <>\r\n                                   <Table striped bordered hover >\r\n                                        <tbody>\r\n                                             <tr>\r\n                                                  <td><b>Product</b></td>\r\n                                                  <td><b>Seller</b></td>\r\n                                                  <td><b>Top Bid</b></td>\r\n                                                  <td><b>Days Remaining</b></td>\r\n                                                  <td><b>Delete</b></td>\r\n                                             </tr>\r\n                                             {\r\n                                                  array && array.map((item, index) =>\r\n                                                       // Conditional rendering if Date has passed\r\n                                                       <>\r\n                                                            {(item.endDateforBiding <= 0) ?\r\n                                                                 null\r\n                                                                 :\r\n                                                                 <tr key={index}>\r\n\r\n                                                                      <td ><Link to='/bid' state={{ auctionItemData: item, ItemId: item.ItemFirebaseId }} style={{ textDecoration: \"none\" }}><span className=\"product\">{item.productName}</span></Link></td>\r\n                                                                      <td>{item.sellerName}</td>\r\n                                                                      <td>{item.topBid}</td>\r\n                                                                      <td>{item.endDateforBiding}</td>\r\n                                                                      <td>{userDetail.userId === item.sellerID ? <span className=\"delete\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => handleDelete(item)}>Delete</span> : null}</td>\r\n                                                                 </tr>\r\n                                                            }\r\n                                                       </>\r\n                                                  )\r\n                                             }\r\n                                        </tbody>\r\n                                   </Table>\r\n                                   <footer className='lower_Home_Page'>\r\n                                        <Link to='/newAuction'><button type=\"button\" className=\"btn btn-primary\">New Auction</button></Link>\r\n                                        <p>Your current wallet: <span className='wallet'>{userData?.wallet}$</span></p>\r\n                                   </footer>\r\n                              </>\r\n                    }\r\n               </main>\r\n               <Toaster />\r\n          </Container>\r\n     );\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport NavBar from '../../Navbar/NavBar'\r\nimport { Form, Button, Card } from \"react-bootstrap\"\r\nimport './newAuctionStyle.css'\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { db } from '../../firebase'\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nexport default function NewAuction() {\r\n     const userDetail = JSON.parse(localStorage.getItem('User'))\r\n     const [productName, setProductName] = useState()\r\n     const [startingBid, setStartingBid] = useState()\r\n     const [description, setDescription] = useState()\r\n     const [date, setDate] = useState()\r\n     const [loader, setLoader] = useState(false)\r\n     const handleNewAuction = async (e) => {\r\n          setLoader(true)\r\n          e.preventDefault()\r\n          try {\r\n               await addDoc(collection(db, \"Auction\"), {\r\n                    productName: productName,\r\n                    sellerID: userDetail.userId,\r\n                    sellerName: userDetail.name,\r\n                    topBid: startingBid,\r\n                    endDateforBiding: date,\r\n                    topBidUser: userDetail.name,\r\n                    topBidUserId: userDetail.userId,\r\n                    Description: description,\r\n                    itemId: Math.floor(1000000000 + Math.random() * 999999999),\r\n               });\r\n               setProductName(\"\")\r\n               setDate(\"\")\r\n               setDescription(\"\")\r\n               setStartingBid(\"\")\r\n               setLoader(false)\r\n               toast.success(\"Item launch successfully\")\r\n          }\r\n          catch (e) {\r\n               toast.error(e.message)\r\n          }\r\n     }\r\n\r\n     return (\r\n          <>\r\n               <Container>\r\n                    <NavBar title=\"New Auction\" />\r\n                    <Card className=\"w-100\" style={{ maxWidth: \"1200px\" }}>\r\n                         <Card.Body>\r\n                              <h2 className=\"text-center mb-4\">New Auction</h2>\r\n                              <Form onSubmit={handleNewAuction}>\r\n                                   <Form.Group>\r\n                                        <Form.Label className='label'>Product Name:</Form.Label>\r\n                                        <Form.Control type=\"text\" required placeholder='Cricket Bat' onChange={(e) => setProductName(e.target.value)} value={productName} />\r\n                                   </Form.Group>\r\n                                   <Form.Group >\r\n                                        <Form.Label className='label'>Starting Bid:</Form.Label>\r\n                                        <Form.Control type=\"number\" placeholder='500' onChange={(e) => setStartingBid(e.target.value)} required value={startingBid} />\r\n                                   </Form.Group>\r\n                                   <Form.Group >\r\n                                        <Form.Label className='label'>Description:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} onChange={(e) => setDescription(e.target.value)} required value={description} />\r\n                                   </Form.Group>\r\n                                   <Form.Group controlId=\"duedate\">\r\n                                        <Form.Label className='label'>Date:</Form.Label>\r\n                                        <Form.Control type=\"date\" name=\"duedate\" onChange={(e) => setDate(e.target.value)} placeholder=\"Due date\" min={new Date().toISOString().split('T')[0]} required value={date} />\r\n                                   </Form.Group>\r\n                                   <center>\r\n                                        {loader ?\r\n\r\n                                             <Button className=\"w-50\" type=\"button\" disabled>\r\n                                                  <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                  Please wait...\r\n                                             </Button>\r\n                                             :\r\n                                             <Button className=\"w-50\" type=\"submit\">\r\n                                                  Create Auction\r\n                                             </Button>\r\n                                        }\r\n                                   </center>\r\n                              </Form>\r\n                         </Card.Body>\r\n                    </Card>\r\n                    <Toaster />\r\n               </Container>\r\n          </>\r\n     )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport NavBar from '../../Navbar/NavBar'\r\nimport { Card } from \"react-bootstrap\"\r\nimport '../newAuction/newAuctionStyle.css'\r\nimport './bidStyle.css'\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { useLocation ,useNavigate} from 'react-router-dom'\r\nimport { doc, updateDoc, getDoc } from 'firebase/firestore'\r\nimport { db } from '../../firebase'\r\nexport default function Bid() {\r\n     const navigate = useNavigate()\r\n     const location = useLocation();\r\n     const auctionItemData = location.state.auctionItemData\r\n     const AuctionItemID = location.state.ItemId\r\n     const [newBid, setNewBid] = useState()\r\n     const [loader, setLoader] = useState(false)\r\n     const [userData, setUserData] = useState()\r\n     const userId = JSON.parse(localStorage.getItem(\"UserID\"))\r\n     const userName = JSON.parse(localStorage.getItem(\"User\")) \r\n     useEffect(() => {\r\n          const docRef = doc(db, 'Users', userId)\r\n          getDoc(docRef)\r\n               .then((doc) => {\r\n                    setUserData(doc.data())\r\n               })\r\n     }, [])\r\n     const handleEnterBid = async () => {\r\n          setLoader(true)\r\n          if (parseFloat(auctionItemData.topBid) >= parseFloat(newBid)) {\r\n               toast.error(\"Your bid is less than top bid \")\r\n               setLoader(false)\r\n               return\r\n          }\r\n          if (userData.wallet < parseFloat(newBid)) {\r\n               toast.error(\"Your wallet balance is insufficient\")\r\n               setLoader(false)\r\n               return\r\n          }\r\n          try {\r\n               const docRef = doc(db, 'Auction', AuctionItemID)\r\n               await updateDoc(docRef, {\r\n                    topBid: newBid,\r\n                    topBidUser: userName.name\r\n\r\n               })\r\n               toast.success(\"Your bid is now highest\")\r\n          } catch (e) {\r\n               toast.error(\"Server encounter an unexception condition\")\r\n          }\r\n          const newBalance = userData.wallet - parseFloat(newBid)\r\n          // The User Wallet Balnce handle\r\n          try {\r\n               const docRef = doc(db, 'Users', userId)\r\n               await updateDoc(docRef, {\r\n                    wallet: newBalance\r\n               })\r\n               setLoader(false)\r\n               navigate(\"/homes\")\r\n               setTimeout(() => {\r\n                    toast.success(`Your remaining balance is: ${newBalance}`)\r\n                    return\r\n               }, 1000)\r\n          } catch (e) {\r\n               toast.error(\"Server encounter an unexception condition\")\r\n          }\r\n     }\r\n     return (\r\n          <Container>\r\n               <NavBar title={auctionItemData.productName} createdBy={auctionItemData.sellerName} />\r\n               <Card className=\"w-100\" style={{ maxWidth: \"1200px\" }}>\r\n                    <Card.Body>\r\n                         <h6 className='time_tag'>Time Remaining: {auctionItemData.timeRemaining} Days</h6>\r\n                         <p>{auctionItemData.Description}</p>\r\n                         <div className=\"biding_information\">\r\n                              <div>\r\n                                   <p className='hieghest_bid'>Current High Bid</p>\r\n                                   <p className='hieghest_bid'>{auctionItemData.topBid}</p>\r\n                              </div>\r\n                              <div>\r\n                                   <p className='hieghest_bid'>By:  {auctionItemData.topBidUser}</p>\r\n                              </div>\r\n                         </div>\r\n                         <footer className='Input_Box'>\r\n                              <label className='your_Bid'>Your Bid:</label>\r\n                              <input type='text' placeholder='Enter your Bid' className='input_for_new_bids' onChange={(e) => { setNewBid(e.target.value) }}></input>\r\n                              {!loader ?\r\n                                   <button type=\"button\" className=\"btn btn-sm btn-success bid_button\" onClick={() => handleEnterBid()}>Enter Bid</button>\r\n                                   :\r\n                                   <button type=\"button\" className=\"btn btn-sm btn-success bid_button\">\r\n                                        <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>  \r\n                                        Please wait        \r\n                                   </button> \r\n                              }\r\n                         </footer>\r\n                    </Card.Body>\r\n               </Card>\r\n               <Toaster />\r\n          </Container>\r\n     )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\nimport Signup from \"./Signup\"\n// import { Container } from \"react-bootstrap\"\n// import { AuthProvider } from \"../contexts/AuthContext\"\nimport {  Routes, Route,Navigate } from \"react-router-dom\"\nimport Login from \"./Login\"\nimport Home from \"./home/Home\"\nimport NewAuction from \"./newAuction/NewAuction\"\nimport Bid from \"./biding/Bid\"\n\n\nfunction App() {\n  const [user, setuser] = useState(null)\n  useEffect(() => {\n    const u = localStorage.getItem(\"user\");\n    u && JSON.parse(u) ? setuser(true) : setuser(false);\n  }, [])\n  useEffect(() => {\n    localStorage.setItem(\"user\", user)\n  }, [user]);\n  const handleAuthUser = () =>{\n    setuser(true)\n  }\n  return (\n    <div >\n      <Routes>\n        <>\n          {!user && (\n            <>\n              <Route path=\"/\" element={<Login AuthLogin={handleAuthUser} />} />\n              <Route path=\"/signup\" element={<Signup/>} />\n            </>\n          )}\n          {user && (\n            <>\n              <Route path=\"/home\" element={<Home/>} />\n              <Route path=\"/newAuction\" element={<NewAuction/>} />\n              <Route path=\"/bid\" element={<Bid/>} />\n            </>\n          )}\n          <Route path=\"*\" element={<Navigate to={user?\"/home\":\"/\"}/>}></Route>\n        </>\n      </Routes>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}