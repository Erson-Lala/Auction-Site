{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\Freelancing\\\\Test\\\\React-Firebase-Auth-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"E:\\\\Freelancing\\\\Test\\\\React-Firebase-Auth-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:\\\\Freelancing\\\\Test\\\\React-Firebase-Auth-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from\"react\";// import {firebase} from \"firebase/app\"\nimport{Form,Button,Card}from\"react-bootstrap\";// import { useAuth } from \"../contexts/AuthContext\"\nimport{Link,useNavigate}from\"react-router-dom\";import{Container}from\"react-bootstrap\";import toast,{Toaster}from'react-hot-toast';import{doc,getDoc}from\"firebase/firestore\";import{getAuth,signInWithEmailAndPassword}from\"firebase/auth\";import{db}from\"../firebase\";export default function Login(_ref){var AuthLogin=_ref.AuthLogin;var auth=getAuth();var emailRef=useRef();var passwordRef=useRef();var navigate=useNavigate();// const { login } = useAuth()\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}function _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();setLoading(true);signInWithEmailAndPassword(auth,emailRef.current.value,passwordRef.current.value).then(function(userCredential){// Signed in \nvar user=userCredential.user;fetchUserData(user.uid);toast.success(\"Login successfully\");setLoading(false);// ...\n}).catch(function(error){toast.error(error.message);setLoading(false);});///\ncase 3:case\"end\":return _context2.stop();}}},_callee2);}));return _handleSubmit.apply(this,arguments);}var fetchUserData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var docRef;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:docRef=doc(db,\"Users\",id);getDoc(docRef).then(function(doc){localStorage.setItem(\"User\",JSON.stringify(doc.data()));localStorage.setItem(\"UserID\",JSON.stringify(id));AuthLogin();navigate('/home');});case 2:case\"end\":return _context.stop();}}},_callee);}));return function fetchUserData(_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Container,{className:\"d-flex align-items-center justify-content-center\",style:{minHeight:\"100vh\"}},/*#__PURE__*/React.createElement(Card,{className:\"w-100\",style:{maxWidth:\"400px\"}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(\"h2\",{className:\"text-center mb-4\"},\"Log In\"),/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Form.Group,{id:\"email\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Email\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"email\",ref:emailRef})),/*#__PURE__*/React.createElement(Form.Group,{id:\"password\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",ref:passwordRef})),!loading?/*#__PURE__*/React.createElement(Button,{className:\"w-100\",type:\"submit\"},\"Log In\"):/*#__PURE__*/React.createElement(Button,{className:\"w-100\",type:\"submit\"},/*#__PURE__*/React.createElement(\"span\",{class:\"spinner-grow spinner-grow-sm\",role:\"status\",\"aria-hidden\":\"true\"})))),/*#__PURE__*/React.createElement(\"div\",{className:\"w-100 text-center mt-2\"},\"Need an account? \",/*#__PURE__*/React.createElement(Link,{to:\"/signup\"},\"Sign Up\"))),/*#__PURE__*/React.createElement(Toaster,null)));}","map":{"version":3,"sources":["E:/Freelancing/Test/React-Firebase-Auth-master/src/components/Login.js"],"names":["React","useRef","useState","Form","Button","Card","Link","useNavigate","Container","toast","Toaster","doc","getDoc","getAuth","signInWithEmailAndPassword","db","Login","AuthLogin","auth","emailRef","passwordRef","navigate","loading","setLoading","handleSubmit","e","preventDefault","current","value","then","userCredential","user","fetchUserData","uid","success","catch","error","message","id","docRef","localStorage","setItem","JSON","stringify","data","minHeight","maxWidth"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\"\n// import {firebase} from \"firebase/app\"\nimport { Form, Button, Card } from \"react-bootstrap\"\n// import { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useNavigate } from \"react-router-dom\"\nimport { Container } from \"react-bootstrap\"\nimport toast, { Toaster } from 'react-hot-toast';\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { db } from \"../firebase\"\nexport default function Login({ AuthLogin }) {\n  const auth = getAuth()\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const navigate = useNavigate()\n  // const { login } = useAuth()\n\n  const [loading, setLoading] = useState(false)\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n    setLoading(true)\n    signInWithEmailAndPassword(auth, emailRef.current.value, passwordRef.current.value)\n      .then((userCredential) => {\n        // Signed in \n        const user = userCredential.user;\n        fetchUserData(user.uid)\n        toast.success(\"Login successfully\")\n        setLoading(false)\n\n        // ...\n      })\n      .catch((error) => {\n        toast.error(error.message)\n        setLoading(false)\n      });\n\n    ///\n\n\n  }\n\n  const fetchUserData = async (id) => {\n    const docRef = doc(db, \"Users\", id)\n    getDoc(docRef)\n      .then((doc) => {\n        localStorage.setItem(\"User\", JSON.stringify(doc.data()));\n        localStorage.setItem(\"UserID\", JSON.stringify(id));\n        AuthLogin();\n        navigate('/home')\n      })\n\n  }\n  return (\n    <>\n      <Container\n        className=\"d-flex align-items-center justify-content-center\"\n        style={{ minHeight: \"100vh\" }}\n      >\n        <Card className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Log In</h2>\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"email\" ref={emailRef} />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" ref={passwordRef} />\n              </Form.Group>\n              {\n                !loading ?\n                  <Button className=\"w-100\" type=\"submit\">\n                    Log In\n                  </Button>\n                  :\n                  <Button className=\"w-100\" type=\"submit\">\n                    <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                  </Button>\n\n              }\n\n             \n            </Form>\n            {/* <div className=\"w-100 text-center mt-3\">\n              <Link to=\"/forgot-password\">Forgot Password?</Link>\n            </div> */}\n          </Card.Body>\n          <div className=\"w-100 text-center mt-2\">\n            Need an account? <Link to=\"/signup\">Sign Up</Link>\n          </div>\n        </Card>\n        <Toaster />\n      </Container>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}