{"ast":null,"code":"var _jsxFileName = \"E:\\\\Freelancing\\\\Test\\\\React-Firebase-Auth-master\\\\src\\\\components\\\\newAuction\\\\NewAuction.js\";\nimport React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport NavBar from '../NavBar';\nimport { Form, Button, Card } from \"react-bootstrap\";\nimport './newAuctionStyle.css';\nimport { doc, setDoc, collection, addDoc } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nexport default function NewAuction() {\n  const userDetail = JSON.parse(localStorage.getItem('User'));\n  const [productName, setProductName] = useState();\n  const [startingBid, setStartingBid] = useState();\n  const [description, setDescription] = useState();\n  const [date, setDate] = useState();\n  const [alert, setalert] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [errorAlert, setErrorAlert] = useState(false);\n\n  const handleNewAuction = async e => {\n    setLoader(true);\n    e.preventDefault();\n    console.log(\"The User Name is\", date);\n\n    try {\n      const docRef = await addDoc(collection(db, \"Auction\"), {\n        productName: productName,\n        sellerID: userDetail.userId,\n        sellerName: userDetail.name,\n        topBid: startingBid,\n        endDateforBiding: date,\n        topBidUser: userDetail.name,\n        topBidUserId: userDetail.userId,\n        Description: description,\n        itemId: Math.floor(1000000000 + Math.random() * 999999999)\n      });\n      setProductName(\"\");\n      setDate(\"\");\n      setDescription(\"\");\n      setStartingBid(\"\");\n      setLoader(false);\n      setalert(true);\n    } catch (e) {\n      setErrorAlert(true);\n      console.log(\"The error is\", e);\n    }\n  };\n\n  const handleAlert = () => {\n    setInterval(() => {\n      setalert(false);\n    }, 3000);\n  };\n\n  const handleErrorAlert = () => {\n    setInterval(() => {\n      setErrorAlert(false);\n    }, 3000);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    title: \"New Auction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), alert ? /*#__PURE__*/React.createElement(\"div\", {\n    class: \"alert alert-success\",\n    role: \"alert\",\n    onClick: handleAlert(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 26\n    }\n  }, \"Item launch successfully!\") : null, errorAlert ? /*#__PURE__*/React.createElement(\"div\", {\n    class: \"alert alert-success\",\n    role: \"alert\",\n    onClick: handleErrorAlert(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 26\n    }\n  }, \"Something Went Wrong\") : null, /*#__PURE__*/React.createElement(Card, {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"1200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 31\n    }\n  }, \"New Auction\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleNewAuction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 41\n    }\n  }, \"Product Name:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    required: true,\n    placeholder: \"Cricket Bat\",\n    onChange: e => setProductName(e.target.value),\n    value: productName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 41\n    }\n  }, \"Starting Bid:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: \"500$\",\n    onChange: e => setStartingBid(e.target.value),\n    required: true,\n    value: startingBid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 41\n    }\n  }, \"Description:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: 3,\n    onChange: e => setDescription(e.target.value),\n    required: true,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"duedate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 41\n    }\n  }, \"Date:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"date\",\n    name: \"duedate\",\n    onChange: e => setDate(e.target.value),\n    placeholder: \"Due date\",\n    min: new Date().toISOString().split('T')[0],\n    required: true,\n    value: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 36\n    }\n  }, loader ? /*#__PURE__*/React.createElement(Button, {\n    className: \"w-50\",\n    type: \"button\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"spinner-grow spinner-grow-sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 51\n    }\n  }), \"Please wait...\") : /*#__PURE__*/React.createElement(Button, {\n    className: \"w-50\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 46\n    }\n  }, \"Create Auction\")))))));\n}","map":{"version":3,"sources":["E:/Freelancing/Test/React-Firebase-Auth-master/src/components/newAuction/NewAuction.js"],"names":["React","useState","Container","NavBar","Form","Button","Card","doc","setDoc","collection","addDoc","db","NewAuction","userDetail","JSON","parse","localStorage","getItem","productName","setProductName","startingBid","setStartingBid","description","setDescription","date","setDate","alert","setalert","loader","setLoader","errorAlert","setErrorAlert","handleNewAuction","e","preventDefault","console","log","docRef","sellerID","userId","sellerName","name","topBid","endDateforBiding","topBidUser","topBidUserId","Description","itemId","Math","floor","random","handleAlert","setInterval","handleErrorAlert","maxWidth","target","value","Date","toISOString","split"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport NavBar from '../NavBar'\r\nimport { Form, Button, Card } from \"react-bootstrap\"\r\nimport './newAuctionStyle.css'\r\nimport { doc, setDoc, collection, addDoc } from \"firebase/firestore\";\r\nimport { db } from '../../firebase'\r\nexport default function NewAuction() {\r\n     const userDetail = JSON.parse(localStorage.getItem('User'))\r\n     const [productName, setProductName] = useState()\r\n     const [startingBid, setStartingBid] = useState()\r\n     const [description, setDescription] = useState()\r\n     const [date, setDate] = useState()\r\n     const [alert, setalert] = useState(false)\r\n     const [loader, setLoader] = useState(false)\r\n     const [errorAlert, setErrorAlert] = useState(false)\r\n     const handleNewAuction = async (e) => {\r\n          setLoader(true)\r\n          e.preventDefault()\r\n          console.log(\"The User Name is\", date)\r\n          try {\r\n               const docRef = await addDoc(collection(db, \"Auction\"), {\r\n                    productName: productName,\r\n                    sellerID: userDetail.userId,\r\n                    sellerName: userDetail.name,\r\n                    topBid: startingBid,\r\n                    endDateforBiding: date,\r\n                    topBidUser: userDetail.name,\r\n                    topBidUserId: userDetail.userId,\r\n                    Description: description,\r\n                    itemId: Math.floor(1000000000 + Math.random() * 999999999),\r\n               });\r\n               setProductName(\"\")\r\n               setDate(\"\")\r\n               setDescription(\"\")\r\n               setStartingBid(\"\")\r\n               setLoader(false)\r\n               setalert(true)\r\n          }\r\n          catch (e) {\r\n               setErrorAlert(true)\r\n               console.log(\"The error is\", e)\r\n          }\r\n\r\n\r\n     }\r\n\r\n     const handleAlert = () => {\r\n          setInterval(() => {\r\n               setalert(false)\r\n          }, 3000);\r\n     }\r\n     const handleErrorAlert = () => {\r\n          setInterval(() => {\r\n               setErrorAlert(false)\r\n          }, 3000);\r\n     }\r\n     return (\r\n          <>\r\n               <Container>\r\n                    <NavBar title=\"New Auction\" />\r\n                    {alert ?\r\n                         <div class=\"alert alert-success\" role=\"alert\" onClick={handleAlert()}>\r\n                              Item launch successfully!\r\n                         </div> \r\n                         :\r\n                         null\r\n                    }\r\n                     {errorAlert ?\r\n                         <div class=\"alert alert-success\" role=\"alert\" onClick={handleErrorAlert()}>\r\n                              Something Went Wrong\r\n                         </div> \r\n                         :\r\n                         null\r\n                    }\r\n                    <Card className=\"w-100\" style={{ maxWidth: \"1200px\" }}>\r\n                         <Card.Body>\r\n                              <h2 className=\"text-center mb-4\">New Auction</h2>\r\n                              <Form onSubmit={handleNewAuction}>\r\n                                   <Form.Group>\r\n                                        <Form.Label className='label'>Product Name:</Form.Label>\r\n                                        <Form.Control type=\"text\" required placeholder='Cricket Bat' onChange={(e) => setProductName(e.target.value)} value={productName} />\r\n                                   </Form.Group>\r\n                                   <Form.Group >\r\n                                        <Form.Label className='label'>Starting Bid:</Form.Label>\r\n                                        <Form.Control type=\"number\" placeholder='500$' onChange={(e) => setStartingBid(e.target.value)} required value={startingBid} />\r\n                                   </Form.Group>\r\n                                   <Form.Group >\r\n                                        <Form.Label className='label'>Description:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} onChange={(e) => setDescription(e.target.value)} required value={description}/>\r\n                                   </Form.Group>\r\n                                   <Form.Group controlId=\"duedate\">\r\n                                        <Form.Label className='label'>Date:</Form.Label>\r\n                                        <Form.Control type=\"date\" name=\"duedate\" onChange={(e) => setDate(e.target.value)} placeholder=\"Due date\" min={new Date().toISOString().split('T')[0]} required value={date} />\r\n                                   </Form.Group>\r\n                                   <center>\r\n                                        {loader ?\r\n\r\n                                             <Button className=\"w-50\" type=\"button\" disabled>\r\n                                                  <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                  Please wait...\r\n                                             </Button>\r\n                                             :\r\n                                             <Button className=\"w-50\" type=\"submit\">\r\n                                                  Create Auction\r\n                                             </Button>\r\n                                        }\r\n\r\n                                   </center>\r\n                              </Form>\r\n                         </Card.Body>\r\n                    </Card>\r\n               </Container>\r\n\r\n          </>\r\n\r\n     )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}