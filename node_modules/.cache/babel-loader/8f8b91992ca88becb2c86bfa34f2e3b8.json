{"ast":null,"code":"var _jsxFileName = \"E:\\\\Freelancing\\\\Test\\\\React-Firebase-Auth-master\\\\src\\\\components\\\\biding\\\\Bid.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport NavBar from '../NavBar';\nimport { Card } from \"react-bootstrap\";\nimport '../newAuction/newAuctionStyle.css';\nimport './bidStyle.css';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { doc, updateDoc, getDoc } from 'firebase/firestore';\nimport { db } from '../../firebase';\nexport default function Bid() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const auctionItemData = location.state.auctionItemData;\n  const AuctionItemID = location.state.ItemId;\n  const [newBid, setNewBid] = useState();\n  const [loader, setLoader] = useState(false);\n  const [userData, setUserData] = useState();\n  const userId = JSON.parse(localStorage.getItem(\"UserID\"));\n  const userName = JSON.parse(localStorage.getItem(\"User\"));\n  useEffect(() => {\n    const docRef = doc(db, 'Users', userId);\n    getDoc(docRef).then(doc => {\n      setUserData(doc.data());\n    });\n  }, []);\n\n  const handleEnterBid = async () => {\n    setLoader(true);\n\n    if (parseFloat(auctionItemData.topBid) >= parseFloat(newBid)) {\n      toast.error(\"Your bid is less than top bid \");\n      setLoader(false);\n      return;\n    }\n\n    if (userData.wallet < parseFloat(newBid)) {\n      toast.error(\"Your wallet balance is insufficient\");\n      setLoader(false);\n      return;\n    }\n\n    try {\n      const docRef = doc(db, 'Auction', AuctionItemID);\n      await updateDoc(docRef, {\n        topBid: newBid,\n        topBidUser: userName.name\n      });\n      toast.success(\"Your bid is now highest\");\n    } catch (e) {\n      toast.error(\"Server encounter an unexception condition\");\n    }\n\n    const newBalance = userData.wallet - parseFloat(newBid); // The User Wallet Balnce handle\n\n    try {\n      const docRef = doc(db, 'Users', userId);\n      await updateDoc(docRef, {\n        wallet: newBalance\n      });\n      setLoader(false);\n      navigate(\"/homes\");\n      setTimeout(() => {\n        toast.success(`Your remaining balance is: ${newBalance}`);\n        return;\n      }, 1000);\n    } catch (e) {\n      toast.error(\"Server encounter an unexception condition\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    title: auctionItemData.productName,\n    createdBy: auctionItemData.sellerName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"1200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"time_tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 26\n    }\n  }, \"Time Remaining: \", auctionItemData.timeRemaining, \" Days\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 26\n    }\n  }, auctionItemData.Description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"biding_information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"hieghest_bid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 36\n    }\n  }, \"Current High Bid\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"hieghest_bid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 36\n    }\n  }, auctionItemData.topBid)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"hieghest_bid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 36\n    }\n  }, \"By:  \", auctionItemData.topBidUser))), /*#__PURE__*/React.createElement(\"footer\", {\n    className: \"Input_Box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"your_Bid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 31\n    }\n  }, \"Your Bid:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter your Bid\",\n    className: \"input_for_new_bids\",\n    onChange: e => {\n      setNewBid(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 31\n    }\n  }), !loader ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-success bid_button\",\n    onClick: () => handleEnterBid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 36\n    }\n  }, \"Enter Bid\") : /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-success bid_button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"spinner-grow spinner-grow-sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 41\n    }\n  }), \"Please wait\")))), /*#__PURE__*/React.createElement(Toaster, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 16\n    }\n  }));\n}","map":{"version":3,"sources":["E:/Freelancing/Test/React-Firebase-Auth-master/src/components/biding/Bid.js"],"names":["React","useState","useEffect","Container","NavBar","Card","toast","Toaster","useLocation","useNavigate","doc","updateDoc","getDoc","db","Bid","navigate","location","auctionItemData","state","AuctionItemID","ItemId","newBid","setNewBid","loader","setLoader","userData","setUserData","userId","JSON","parse","localStorage","getItem","userName","docRef","then","data","handleEnterBid","parseFloat","topBid","error","wallet","topBidUser","name","success","e","newBalance","setTimeout","productName","sellerName","maxWidth","timeRemaining","Description","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport NavBar from '../NavBar'\r\nimport { Card } from \"react-bootstrap\"\r\nimport '../newAuction/newAuctionStyle.css'\r\nimport './bidStyle.css'\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { useLocation ,useNavigate} from 'react-router-dom'\r\nimport { doc, updateDoc, getDoc } from 'firebase/firestore'\r\nimport { db } from '../../firebase'\r\nexport default function Bid() {\r\n     const navigate = useNavigate()\r\n     const location = useLocation();\r\n     const auctionItemData = location.state.auctionItemData\r\n     const AuctionItemID = location.state.ItemId\r\n     const [newBid, setNewBid] = useState()\r\n     const [loader, setLoader] = useState(false)\r\n     const [userData, setUserData] = useState()\r\n     const userId = JSON.parse(localStorage.getItem(\"UserID\"))\r\n     const userName = JSON.parse(localStorage.getItem(\"User\"))\r\n\r\n     \r\n     useEffect(() => {\r\n          const docRef = doc(db, 'Users', userId)\r\n          getDoc(docRef)\r\n               .then((doc) => {\r\n                    setUserData(doc.data())\r\n               })\r\n     }, [])\r\n     const handleEnterBid = async () => {\r\n          setLoader(true)\r\n          if (parseFloat(auctionItemData.topBid) >= parseFloat(newBid)) {\r\n               toast.error(\"Your bid is less than top bid \")\r\n               setLoader(false)\r\n               return\r\n          }\r\n          if (userData.wallet < parseFloat(newBid)) {\r\n               toast.error(\"Your wallet balance is insufficient\")\r\n               setLoader(false)\r\n               return\r\n          }\r\n          try {\r\n               const docRef = doc(db, 'Auction', AuctionItemID)\r\n               await updateDoc(docRef, {\r\n                    topBid: newBid,\r\n                    topBidUser: userName.name\r\n\r\n               })\r\n               toast.success(\"Your bid is now highest\")\r\n          } catch (e) {\r\n               toast.error(\"Server encounter an unexception condition\")\r\n          }\r\n          const newBalance = userData.wallet - parseFloat(newBid)\r\n          // The User Wallet Balnce handle\r\n          try {\r\n               const docRef = doc(db, 'Users', userId)\r\n               await updateDoc(docRef, {\r\n                    wallet: newBalance\r\n               })\r\n               setLoader(false)\r\n               navigate(\"/homes\")\r\n               setTimeout(() => {\r\n                    toast.success(`Your remaining balance is: ${newBalance}`)\r\n                    return\r\n               }, 1000)\r\n          } catch (e) {\r\n               toast.error(\"Server encounter an unexception condition\")\r\n          }\r\n     }\r\n     return (\r\n          <Container>\r\n               <NavBar title={auctionItemData.productName} createdBy={auctionItemData.sellerName} />\r\n               <Card className=\"w-100\" style={{ maxWidth: \"1200px\" }}>\r\n                    <Card.Body>\r\n                         <h6 className='time_tag'>Time Remaining: {auctionItemData.timeRemaining} Days</h6>\r\n                         <p>{auctionItemData.Description}</p>\r\n                         <div className=\"biding_information\">\r\n                              <div>\r\n                                   <p className='hieghest_bid'>Current High Bid</p>\r\n                                   <p className='hieghest_bid'>{auctionItemData.topBid}</p>\r\n                              </div>\r\n                              <div>\r\n                                   <p className='hieghest_bid'>By:  {auctionItemData.topBidUser}</p>\r\n                              </div>\r\n                         </div>\r\n                         <footer className='Input_Box'>\r\n                              <label className='your_Bid'>Your Bid:</label>\r\n                              <input type='text' placeholder='Enter your Bid' className='input_for_new_bids' onChange={(e) => { setNewBid(e.target.value) }}></input>\r\n                              {!loader ?\r\n                                   <button type=\"button\" className=\"btn btn-sm btn-success bid_button\" onClick={() => handleEnterBid()}>Enter Bid</button>\r\n                                   :\r\n                                   <button type=\"button\" className=\"btn btn-sm btn-success bid_button\">\r\n                                        <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>  \r\n                                        Please wait        \r\n                                   </button> \r\n                              }\r\n                         </footer>\r\n                    </Card.Body>\r\n               </Card>\r\n               <Toaster />\r\n          </Container>\r\n     )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}